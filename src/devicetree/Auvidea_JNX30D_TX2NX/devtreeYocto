
/*
 * Copyright (c) 2020-2021, Vision Components GmbH.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "dt-bindings/clock/tegra186-clock.h"
#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)

//#define UNIT_1 // unit 1 has vesion 1 of the CapableRobots baseboard.
                                // This uses a different i2c mux chip.  We only have 1 of these boards.

#ifndef UNIT_1
        #define I2C_MUX_CHIP "nxp,pca9547"
#else
 // unit 1 uses a pca9548
        #define I2C_MUX_CHIP "nxp,pca9548"
#endif


// ------------------------------------------------------------------------------------------------
//  Driver Configuration for NVIDIA Jetson TX2NX  on Capable Robots Baseboard
// ------------------------------------------------------------------------------------------------
#define VC_MIPI_CAM_0       1   // 1: Enabled, 0: Disabled  (serial_a => CSI Port 0 => VI Stream 0)
#define VC_MIPI_CAM_1       1   // 1: Enabled, 0: Disabled  (serial_e => CSI Port 4 => VI Stream 4)


#define CAM0_TEGRA_SINTERFACE "serial_a"
#define CAM0_PORT_INDEX	0

#define CAM1_TEGRA_SINTERFACE "serial_e"
#define CAM1_PORT_INDEX	4


// ------------------------------------------------------------------------------------------------
//  Supported number of lanes
// -----+------------------------------------------------------------------------------------------
//  1   | OV7251, IMX296, IMX297
//  2   | OV9281, IMX264, IMX265
//  2,4 | IMX178, IMX183, IMX226, IMX250, IMX252, IMX273, IMX290, IMX327, IMX335, IMX392,
//      | IMX412, IMX415, IMX568
// -----+------------------------------------------------------------------------------------------
#define VC_MIPI_LANES       4   // 1, 2, 4 Lanes


// ------------------------------------------------------------------------------------------------
//  Embedded Metadata Height
// -----+------------------------------------------------------------------------------------------
//  0   | IMX178, IMX183, IMX226, IMX250, IMX252, IMX264, IMX265, IMX273, IMX392, OV7251, OV9281
//  1   | IMX290, IMX327, IMX335, IMX415, IMX568
//  2   | IMX296, IMX297, IMX412
// -----+------------------------------------------------------------------------------------------
#define VC_MIPI_METADATA_H  "2" // "0", "1", "2" Lines of meta data


// ------------------------------------------------------------------------------------------------
//   Sensor Manufacturer
// -----+------------------------------------------------------------------------------------------
//   1  | Sony Sensor (IMX)
//   2  | Omni Vision Sensor (OV)
// -----+------------------------------------------------------------------------------------------
#define VC_MIPI_MANUFACTURER 1


// ------------------------------------------------------------------------------------------------
//  GStreamer Support
// ------------------------------------------------------------------------------------------------
//  If you want to use GStreamer with nvarguscamerasrc you have to adjust this settings in the
//  device tree below. The sections which have to be modified are marked by a comment.
//  To find the correct parameter values please follow the instruction in the main README.md of
//  this repository https://github.com/VC-MIPI-modules/vc_mipi_nvidia#gstreamer-support
// ------------------------------------------------------------------------------------------------



#if VC_MIPI_LANES == 1
    #define BUS_WIDTH 1
    #define NUM_LANES "1"
    #define NUM_CSI_LANES 2
#endif
#if VC_MIPI_LANES == 2
    #define BUS_WIDTH 2
    #define NUM_LANES "2"
    #define NUM_CSI_LANES 4
#endif
#if VC_MIPI_LANES == 4
    #define BUS_WIDTH 4
    #define NUM_LANES "4"
    #define NUM_CSI_LANES 8
#endif

#if VC_MIPI_CAM_0 == 1 && VC_MIPI_CAM_1 == 1
    #define VC_MIPI_CAMERAS 2
#else
    #define VC_MIPI_CAMERAS 1
#endif

/ {
        host1x {
                sb3d_version = "1.53";
        vc_vi_base: vi@15700000 {
                        num-channels = <VC_MIPI_CAMERAS>;
            ports {
                #address-cells = <1>;
                #size-cells = <0>;
#if VC_MIPI_CAM_0 == 1
                vc_vi_port0: port@0 {
                    reg = <0>;
                    vc_vi_in0: endpoint {
                                                port-index = <CAM0_PORT_INDEX>;
                        bus-width = <BUS_WIDTH>;
                        remote-endpoint = <&vc_csi_out0>;
                    };
                };
#endif
#if VC_MIPI_CAM_1 == 1
                                vc_vi_port1: port@1 {
                    reg = <1>;
                    vc_vi_in1: endpoint {
                                                port-index = <CAM1_PORT_INDEX>;
                        bus-width = <BUS_WIDTH>;
                        remote-endpoint = <&vc_csi_out1>;
                                        };
                                };
#endif
            };
        };

        vc_csi_base: nvcsi@150c0000 {
            num-channels = <VC_MIPI_CAMERAS>;
            #address-cells = <1>;
            #size-cells = <0>;

#if VC_MIPI_CAM_0 == 1
            vc_csi_chan0: channel@0 {
                reg = <0>;
                ports {
                    #address-cells = <1>;
                    #size-cells = <0>;
                    vc_csi_chan0_port0: port@0 {
                                                reg = <0>;
                        vc_csi_in0: endpoint@0 {
                                                        port-index = <CAM0_PORT_INDEX>;
                            bus-width = <BUS_WIDTH>;
                            remote-endpoint = <&vc_mipi_out0>;
                        };
                    };

                                        vc_csi_chan0_port1: port@1 {
                                                reg = <1>;
                        vc_csi_out0: endpoint@1 {
                            remote-endpoint = <&vc_vi_in0>;
                        };
                    };
                };
            };
#endif

#if VC_MIPI_CAM_1 == 1
            vc_csi_chan1: channel@1 {
                reg = <1>;
                ports {
                     #address-cells = <1>;
                    #size-cells = <0>;
                                        vc_csi_chan1_port0: port@0 {
                         reg = <0>;
                                                vc_csi_in1: endpoint@0 {
                                                        port-index = <CAM1_PORT_INDEX>;
                            bus-width = <BUS_WIDTH>;
                            remote-endpoint = <&vc_mipi_out1>;
                        };
                    };
                                        vc_csi_chan1_port1: port@1 {
                        reg = <1>;
                                                vc_csi_out1: endpoint@1 {
                            remote-endpoint = <&vc_vi_in1>;
                        };
                    };
                };
            };
#endif
                };
        };


    i2c@3180000 {
                pca9547@70 {
                        compatible = I2C_MUX_CHIP; // unit 1 uses pca9548 all others use pca9587
                        status = "okay";
                        reg = <0x70>;
                        #address-cells = <1>;
                        #size-cells = <0>;
                        vcc-supply = <&battery_reg>;
                        force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
                        i2c-parent = <&cam_i2c>;

#if VC_MIPI_CAM_0 == 1
                        i2c@2{
                                status = "okay";
                                reg = <2>;
                                i2c-mux,deselect-on-exit;
                                #address-cells = <1>;
                                #size-cells = <0>;

#if VC_MIPI_MANUFACTURER == 1
                                vc_mipi_cam0: vc_mipi@1a {
                                        reg                     = <0x1a>;
#else
            vc_mipi_cam0: vc_mipi@60 {
                reg                     = <0x60>;
#endif
                compatible              = "nvidia,vc_mipi";

                                        devnode                 = "video0";
                                        use_sensor_mode_id      = "false";
                                        sensor_model            = "vc_mipi";

                                        num_lanes               = NUM_LANES;
                                        trigger_mode            = "0";
                                        io_mode                 = "0";

                                        // ----------------------------------------------------
                                        // If you want to use GStreamer with nvarguscamerasrc
                                        // you have to adjust this settings
                                        physical_w = "6.249";
                                        physical_h = "4.712";
                                        // ----------------------------------------------------

                                        // This node is needed by the Tegra framework.
                                        // You don't have to change any settings if just want to use the V4L API.
                                        mode0 { // cam0
                                                num_lanes                = NUM_LANES;
                                                tegra_sinterface         = CAM0_TEGRA_SINTERFACE;
                                                embedded_metadata_height = VC_MIPI_METADATA_H;
                                                phy_mode = "DPHY";
                                                discontinuous_clk = "no"; // "yes";
                                                dpcm_enable = "false";
                                                cil_settletime = "0";

                                                mclk_khz                 = "24000";
                                                pix_clk_hz               = "800000000";
                                                mclk_multiplier          = "9.33";
                                                readout_orientation      = "90";

                                                // ----------------------------------------------------
                                                // If you want to use GStreamer with nvarguscamerasrc
                                                // you have to adjust this settings.
                                                active_t                 = "0";
                                                active_l                 = "0";
                                                active_w                 = "4032";
                                                active_h                 = "3040";
                                                pixel_t                  = "bayer_rggb";
                                                line_length = "4184";

                                                inherent_gain            = "1";
                                                gain_factor              = "1000";
                                                min_gain_val             = "1";         // mdB
                                                max_gain_val             = "30000";     // mdB
                                                step_gain_val            = "10";        // mdB
                                                default_gain             = "10";         // mdB

                                                exposure_factor          = "1000000";
                                                min_exp_time             = "1";         // us
                                                max_exp_time             = "25000000";    // us  1/40 second
                                                step_exp_time            = "1";         // us
                                                default_exp_time         = "2000000";    // us

                                                framerate_factor         = "1000";
                                                min_framerate            = "1000";         // mHz
                                                max_framerate            = "40057";     // mHz
                                                step_framerate           = "100";       // mHz
                                                default_framerate        = "40057";     // mHz
                                                // ----------------------------------------------------

                                                min_hdr_ratio            = "1";
                                                max_hdr_ratio            = "1";

                                        };


                                        mode1 {
                                                num_lanes                = NUM_LANES;
                                                tegra_sinterface         = CAM0_TEGRA_SINTERFACE;
                                                embedded_metadata_height = VC_MIPI_METADATA_H;
                                                phy_mode = "DPHY";
                                                discontinuous_clk = "no"; // "yes";
                                                dpcm_enable = "false";
                                                cil_settletime = "0";

                                                mclk_khz                 = "24000";
                                                pix_clk_hz               = "800000000";
                                                mclk_multiplier          = "9.33";
                                                readout_orientation      = "90";

                                                // ----------------------------------------------------
                                                // If you want to use GStreamer with nvarguscamerasrc
                                                // you have to adjust this settings.
                                                active_t                 = "740";  // (3840 - 2360) / 2
                                                active_l                 = "96";   // (4032 - 3840) / 2
                                                active_w                 = "4032";  // HD is 3840 x 2160
                                                active_h                 = "2360";   // limit vertical region to improve framerate;
                                                pixel_t                  = "bayer_rggb";
                                                line_length = "4184";

                                                inherent_gain            = "1";
                                                gain_factor              = "1000";
                                                min_gain_val             = "1";         // mdB
                                                max_gain_val             = "45000";     // mdB
                                                step_gain_val            = "14";         // mdB
                                                default_gain             = "1";         // mdB

                                                exposure_factor          = "1000000";
                                                min_exp_time             = "1";         // us
                                                max_exp_time             = "529048";   // us
                                                step_exp_time            = "1";         // us
                                                default_exp_time         = "1000";      // us

                                                framerate_factor         = "1000";
                                                min_framerate            = "1000";      // mHz
                                                max_framerate            = "60000";     // mHz
                                                step_framerate           = "100";            // mHz
                                                default_framerate        = "60000";     // mHz
                                                // ----------------------------------------------------

                                                min_hdr_ratio            = "1";
                                                max_hdr_ratio            = "1";

                                        };


                                        ports {
                                                #address-cells = <1>;
                                                #size-cells = <0>;

                                                port@0 {
                                                        reg = <0>;
                                                        vc_mipi_out0: endpoint {
                                                                port-index = <CAM0_PORT_INDEX>;
                                                                bus-width = <BUS_WIDTH>;
                                                                remote-endpoint = <&vc_csi_in0>;
                                                        };
                                                };
                                        };
                                };
                        };
#endif

#if VC_MIPI_CAM_1 == 1
                        i2c@3{
                                status = "okay";
                                reg = <3>;
                                i2c-mux,deselect-on-exit;
                                #address-cells = <1>;
                                #size-cells = <0>;

#if VC_MIPI_MANUFACTURER == 1
                                vc_mipi_cam1: vc_mipi@1a {
                                        reg = <0x1a>;
#else
            vc_mipi_cam1: vc_mipi@60 {
                reg                     = <0x60>;
#endif
                compatible              = "nvidia,vc_mipi";
                                        devnode                 = "video1";
                                        use_sensor_mode_id      = "false";
                                        sensor_model            = "vc_mipi";

                                        num_lanes               = NUM_LANES;
                                        trigger_mode            = "0";
                                        io_mode                 = "0";

                                        // ----------------------------------------------------
                                        // If you want to use GStreamer with nvarguscamerasrc
                                        // you have to adjust this settings
                                        physical_w = "6.249";
                                        physical_h = "4.712";
                                        // ----------------------------------------------------

                                        // This node is needed by the Tegra framework.
                                        // You don't have to change any settings if just want to use the V4L API.



                                        mode0 { //cam1
                                                num_lanes                = NUM_LANES;
                                                tegra_sinterface         = CAM1_TEGRA_SINTERFACE;
                                                embedded_metadata_height = VC_MIPI_METADATA_H;
                                                phy_mode = "DPHY";
                                                discontinuous_clk = "no"; // "yes";
                                                dpcm_enable = "false";
                                                cil_settletime = "0";

                                        mclk_khz                 = "24000";
                                        pix_clk_hz               = "800000000";
                                        mclk_multiplier          = "9.33";
                                                readout_orientation      = "0";

                                                // ----------------------------------------------------
                                                // If you want to use GStreamer with nvarguscamerasrc
                                // you have to adjust this settings.
                                                active_t                 = "0";
                                                active_l                 = "0";
                                                active_w                 = "4032";
                                                active_h                 = "3040";
                                                pixel_t                  = "bayer_rggb";
                                                line_length = "4184";

                                                inherent_gain            = "1";
                                                gain_factor              = "1000";
                                                min_gain_val             = "1";         // mdB
                                                max_gain_val             = "30000";     // mdB
                                                step_gain_val            = "10";        // mdB
                                                default_gain             = "10";         // mdB

                                                exposure_factor          = "1000000";
                                                min_exp_time             = "1";         // us
                                                max_exp_time             = "25000000";    // us  1/40 second
                                                step_exp_time            = "1";         // us
                                                default_exp_time         = "2000000";     // us

                                                framerate_factor         = "1000";
                                                min_framerate            = "1000";         // mHz
                                                max_framerate            = "40057";     // mHz
                                                step_framerate           = "100";       // mHz
                                                default_framerate        = "40057";     // mHz
                                                // ----------------------------------------------------

                                                min_hdr_ratio            = "1";
                                                max_hdr_ratio            = "1";
                                        };

                                        mode1 {
                                                num_lanes                = NUM_LANES;
                                                tegra_sinterface         = CAM1_TEGRA_SINTERFACE;
                                                embedded_metadata_height = VC_MIPI_METADATA_H;
                                                phy_mode = "DPHY";
                                                discontinuous_clk = "no"; // "yes";
                                                dpcm_enable = "false";
                                                cil_settletime = "0";

                                                mclk_khz                 = "24000";
                                                pix_clk_hz               = "800000000";
                                                mclk_multiplier          = "9.33";
                                                readout_orientation      = "0";

                                                // ----------------------------------------------------
                                                // If you want to use GStreamer with nvarguscamerasrc
                                                // you have to adjust this settings.
                                                active_t                 = "740";  // (3840 - 2360) / 2
                                                active_l                 = "96";   // (4032 - 3840) / 2
                                                active_w                 = "4032";  // HD is 3840 x 2160
                                                active_h                 = "2360";   // limit vertical region to improve framerate;
                                                pixel_t                  = "bayer_rggb";
                                                line_length = "4184";

                                                inherent_gain            = "1";
                                                gain_factor              = "1000";
                                                min_gain_val             = "1";         // mdB
                                                max_gain_val             = "45000";     // mdB
                                                step_gain_val            = "14";       // mdB
                                                default_gain             = "1";         // mdB

                                                exposure_factor          = "1000000";
                                                min_exp_time             = "1";         // us
                                                max_exp_time             = "529048";   // us
                                                step_exp_time            = "1";         // us
                                                default_exp_time         = "1000";     // us

                                                framerate_factor         = "1000";
                                                min_framerate            = "1000";      // mHz
                                                max_framerate            = "60000";     // mHz
                                                step_framerate           = "100";            // mHz
                                                default_framerate        = "60000";     // mHz

                                                // ----------------------------------------------------

                                                min_hdr_ratio            = "1";
                                                max_hdr_ratio            = "1";
                                        };

                                        ports {
                                                #address-cells = <1>;
                                                #size-cells = <0>;
                                                port@0 {
                                                        reg = <0>;
                                                        vc_mipi_out1: endpoint {
                                                                port-index = <CAM1_PORT_INDEX>;
                                                                bus-width = <BUS_WIDTH>;
                                                                remote-endpoint = <&vc_csi_in1>;
                                                        };
                                                };
                                        };
                                };
                        };
#endif
                };
        };
    lens@vc_mipi {
        min_focus_distance  = "0.0";
        hyper_focal         = "0.0";
        focal_length        = "6.0";
        f_number            = "2.0";
        aperture            = "0.0";
    };
};

/ {
    tcp: tegra-camera-platform {
        compatible = "nvidia, tegra-camera-platform";

        num_csi_lanes = <NUM_CSI_LANES>;
        max_lane_speed = <1500000>;
        min_bits_per_pixel = <10>;
        vi_peak_byte_per_pixel = <2>;
        vi_bw_margin_pct = <25>;
        max_pixel_rate = <240000>;
        isp_peak_byte_per_pixel = <5>;
        isp_bw_margin_pct = <25>;

        modules {
#if VC_MIPI_CAM_0 == 1
            cam_module0: module0 {
                status = "okay";
                                badge = "lenai_front_vc_mipi";
                position = "front";
                                orientation = "1";
                cam_module0_drivernode0: drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
#if VC_MIPI_MANUFACTURER == 1
                                        devname = "vc_mipi 32-001a";
                                        proc-device-tree = "/proc/device-tree/i2c@3180000/pca9547@70/i2c@2/vc_mipi@1a";

#else
                                        devname = "vc_mipi 32-0060";
                    proc-device-tree = "/proc/device-tree/cam_i2cmux/i2c@0/vc_mipi@60";
#endif
                };
                cam_module0_drivernode1: drivernode1 {
                    status = "okay";
                    pcl_id = "v4l2_lens";
                    proc-device-tree = "/proc/device-tree/lens@vc_mipi/";
            };
            };
#endif
#if VC_MIPI_CAM_1 == 1
            cam_module1: module1 {
                                status = "okay";
                                badge = "lanai_rear_vc_mipi";
                position = "rear";
                orientation = "1";
                cam_module1_drivernode0: drivernode0 {
                    status = "okay";
                    pcl_id = "v4l2_sensor";
#if VC_MIPI_MANUFACTURER == 1
                                        devname = "vc_mipi 33-001a";
                                        proc-device-tree = "/proc/device-tree/i2c@3180000/pca9547@70/i2c@3/vc_mipi@1a";
#else
                    devname = "vc_mipi 10-0060";
                    proc-device-tree = "/proc/device-tree/cam_i2cmux/i2c@1/vc_mipi@60";
#endif
                };
                cam_module1_drivernode1: drivernode1 {
                    status = "okay";
                    pcl_id = "v4l2_lens";
                    proc-device-tree = "/proc/device-tree/lens@vc_mipi/";
                };
            };
#endif
        };
    };
};
